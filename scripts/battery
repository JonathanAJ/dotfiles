#!/usr/bin/env python3

import re
from subprocess import check_output

import subprocess

status = check_output(['acpi'], universal_newlines=True)

if not status:
    # stands for no battery found
    fulltext = "<span color='red'><span font='FontAwesome'>\uf00d \uf240</span></span>"
    percentleft = 100
else:
    # if there is more than one battery in one laptop, the percentage left is 
    # available for each battery separately, although state and remaining 
    # time for overall block is shown in the status of the first battery 
    batteries = status.split("\n")
    state_batteries=[]
    commasplitstatus_batteries=[]
    percentleft_batteries=[]
    time = ""
    for battery in batteries:
        if battery!='':
            state_batteries.append(battery.split(": ")[1].split(", ")[0])
            commasplitstatus = battery.split(", ")
            if not time:
                time = commasplitstatus[-1].strip()
                # check if it matches a time
                time = re.match(r"(\d+):(\d+)", time)
                if time:
                    time = ":".join(time.groups())
                    timeleft = " ({})".format(time)
                else:
                    timeleft = ""

            p = int(commasplitstatus[1].rstrip("%\n"))
            if p>0:
                percentleft_batteries.append(p)
            commasplitstatus_batteries.append(commasplitstatus)
    state = state_batteries[0]
    commasplitstatus = commasplitstatus_batteries[0]
    
    if percentleft_batteries:
        percentleft = int(sum(percentleft_batteries)/len(percentleft_batteries))
    else:
        percentleft = 0

    FA_LIGHTNING =      "<span font='FontAwesome' color='{color}'></span>"
    FA_BATTERY_HALF =   "<span font='FontAwesome' color='{color}'> </span>"
    FA_BATTERY =        "<span font='FontAwesome' color='{color}'> </span>"
    FA_QUESTION =       "<span font='FontAwesome' color='{color}'></span>"

    if state == "Discharging":
        icon = FA_BATTERY_HALF
    elif state == "Charging":
        icon = FA_LIGHTNING
    elif state == "Full":
        icon = FA_BATTERY
    elif state == "Unknown":
        icon = FA_QUESTION
    else:
        icon = FA_LIGHTNING 
    
    def color(percent):
        if percent < 10:
            return "#FF0000"
        if percent < 20:
            return "#FF3300"
        if percent < 30:
            return "#FF6600"
        if percent < 40:
            return "#FF9900"
        if percent < 50:
            return "#FFCC00"
        if percent < 60:
            return "#FFFF00"
        if percent < 70:
            return "#FFFF33"
        if percent < 80:
            return "#FFFF66"
        return "#FFFFFF"

    def notify(percent, state):
        if percent < 10 and state != 'Charging':
            subprocess.run([
                "notify-send",
                "--urgency=critical",
                "--icon=error",
                "Battery Low",
                "  Please, charge your computer."
            ])

    fulltext    = ""
    color       = color(percentleft)
    formatter   = icon + "<span color='{color}'>{percent}%</span>"
    fulltext    += formatter.format(color = color, percent = percentleft)
    notify(percentleft, state)

print(fulltext)
